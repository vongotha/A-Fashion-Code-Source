import { addTableToHTML, allItemsObjects, getRandomItems, createHTMLCarrouselItemTables, asssignActiveClass } from "./scripts/function.js";

const itemsHomePage = getRandomItems(allItemsObjects, 3);

document.addEventListener('DOMContentLoaded', () => {
  asssignActiveClass();
  initializeCarousel();
});

function initializeCarousel() {
  const $carousel = $('#carouselContainer');

  // ðŸ›‘ Ã‰tape 1 : Attacher l'Ã©couteur 'init' et 'afterChange'
  // Ces Ã©couteurs DOIVENT Ãªtre lÃ  avant que .slick() ne soit appelÃ©.
  $carousel.off('init afterChange'); // SÃ©curitÃ© contre les doubles attachements

  $carousel.on('init', function(event, slick){
    // DÃ¨s que Slick est prÃªt, on affiche la premiÃ¨re table (index 0)
    console.log("Slick est prÃªt. Initialisation de la table 0.");
    updateActiveSlide(0, itemsHomePage);
  });
  
  $carousel.on('afterChange', function(event, slick, currentSlide){
    updateActiveSlide(currentSlide, itemsHomePage);
  });

  // 2. Ã‰tape 2 : Appeler la fonction qui CRÃ‰E le HTML et INITIALISE Slick
  // L'appel Ã  .slick() dans cette fonction va maintenant trouver les Ã©couteurs attachÃ©s ci-dessus.
  createHTMLCarrouselItemTables(itemsHomePage);
}

// ... (votre fonction updateActiveSlide est correcte) ...

function updateActiveSlide(currentIndex, itemArray) {
  const $container = $('#carouselContainer');
  
  if (!$container.hasClass('slick-initialized')) return;

  // 1. Cibler les Ã©lÃ©ments du carrousel avec la classe 'first'
  // On utilise la sÃ©lection par classe car l'Ã©lÃ©ment dans le DOM est 'div.first'
  const $slides = $container.find('.slick-slide:not(.slick-cloned) .first');

  if ($slides.length === 0) return;

  // 2. Mettre Ã  jour la classe CSS (.second)
  $slides.removeClass('second');

  // Ajouter la classe Ã  l'Ã©lÃ©ment correspondant Ã  currentIndex
  if ($slides[currentIndex]) {
    $($slides[currentIndex]).addClass('second');
  }

  // 3. Mettre Ã  jour la TABLE ! ðŸŽ¯
  if (itemArray && itemArray[currentIndex]) {
    addTableToHTML(itemArray[currentIndex].Table);
    //addTableToHTML.addClass('.animateTable');
  }
}
